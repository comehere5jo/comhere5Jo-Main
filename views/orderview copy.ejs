<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Setak D'gaja</title>
        <link rel="stylesheet" href="/css/index.css" />
      </head>
<body>
  
  <%- include('nav.html') %>

  <div class="order_title"> 주문번호 <%= data.orderId %>  </div>
  <div class="order_info"> 
    <div class="order_user"> 배송주소 <%= data.address %>    </div>
    <div class="order_time">
    <%
    const dateString = data.updatedAt;

    const date = new Date(dateString);
    
    const options = {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      weekday: 'long',
      timeZone: 'Asia/Seoul'
    };
    
    const formattedDate = new Intl.DateTimeFormat('ko-KR', options).format(date);
 
    %>
 
   주문 날짜  <%= formattedDate %></div>
  </div>
  <div class="order_contents"> 주문 요청사항 <%= data.requests %>  </div>


  


  <div class="order_buttons">
      <div class="edit"><a href="/login" class="nav__column--order-btn">수정</a></div>
      <div class="delete"> <a href="/login" class="nav__column--order-btn">삭제</a></div>
  </div>


  </div>

  <style>

    a {
    text-decoration: none;
    color: black;
    }
    
    .order_title {
      margin-top:100px;
      margin-left: 100px;
      text-align: left;
      font-weight: 700;
      font-size: 2.25rem;
    }
    .order_info {
      display: flex;
    }
    .order_user {
      margin-top: 50px;
      margin-left: 100px;
      text-align: left;
      font-weight: 700;
      font-size: 1rem;
    }
    .order_time {
      margin-top: 50px;
      margin-left: 50px;
      text-align: left;
      font-weight: 500;
      font-size: 1rem;
    }
    .order_contents {
      margin: 100px;
      text-align: left;
      font-weight: 500;
      font-size: 1rem;
    }

    .order_buttons {
      margin-left: 80px;
      margin-bottom: 50px;
      display: flex;
    }
    
    .comments_title{
      display:flex;
    }
    /* .comments_titlename{

    } */
    .comments_number{
      margin-left: 10px;
    }

    .comments_info {
     display: flex;
     margin-bottom: 20px;
     font-weight: 800;
    }

    .comments {
      margin-left: 100px;
      text-align: left;
      font-weight: 700;
      font-size: 1rem;
    }
    .comment-author{
      text-align: left;
      font-weight: 700;
      font-size: 1rem;
    }
    .commnets_date {
      font-size:0.8rem;
      margin-left:20px;
      font-weight: 400;
    }
    .comment-text
    {
      margin-top:20px;
      text-align: left;
      font-weight: 500;
      font-size: 1rem;
      margin-bottom: 25px;
    }

 
      
      #comments {
        margin-top: 20px;
      }
      .comment {
        /* border: 1px solid #ccc; */
        margin-bottom: 10px;
      }
      .comment-author {
          text-align: left;
          font-weight: 700;
          font-size: 1rem;
      }
      .commnets_date {
          font-size:0.8rem;
          margin-left:20px;
          font-weight: 400;
        }

      .comment-text {
        font-size: 16px;
        font-weight: 500;
      }
      textarea {
      margin-top: 10px;
      width: 100%;
      font-size: 16px;
      color: #333;
      background-color: #fafafa;
      }
      button[type="submit"] {
        margin-top: 10px;
        border-radius: 5px;
        height: 40px;
        font-size: 16px;
        color: #fff;
        background-color: #333;
      }
      


  </style>

  




<!-- 
<script>
  // Get reference to the comment form and comments container
  const commentForm = document.getElementById("comment-form");
  const commentsContainer = document.getElementById("comments");
  // Get reference to the comment template
  const commentTemplate = document.querySelector(".comment");

  // When the comment form is submitted
  commentForm.addEventListener("submit", event => {
    event.preventDefault(); // Prevent form submission

    // Get the comment text
    const commentText = document.getElementById("comment").value;
    // Clear the comment text field
    document.getElementById("comment").value = "";

    // Create a new comment element by cloning the comment template
    const commentElement = commentTemplate.cloneNode(true);
    // Show the comment element
    commentElement.style.display = "block";
    // Set the comment text
    commentElement.querySelector(".comment-text").innerText = commentText;
    // Set the comment author
    commentElement.querySelector(".comment-author").innerText = "LIV";

    // Add the comment element to the comments container
    commentsContainer.appendChild(commentElement);
  });
</script>


<script>
  $('#comment-form').on('submit', event => {
  event.preventDefault(); // prevent the form from reloading the page

  try {
    const formData = $(event.target).serialize(); // get the form data as a string

    // send a order request to the server with the form data
    $.ajax({
      method: 'order',
      url: '/comments',
      data: formData, // include the form data in the request body
      success: response => {
        // handle the response from the server
      },
      error: error => {
        throw error; // throw the error so it can be caught by the catch block
      }
    });
  } catch (error) {
    alert("Can't send a comment"); // show an alert window with the error message
  }
});

</script> -->


<script>
    // const token = Cookies.get('token');
    // const token = req.headers.cookie.split('=')[1];
    const token = '<%- token %>';
    console.log(token);
  
    axios.get('/me', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
    .then((response) => {
      console.log(response.data);  // prints the data returned by the server
    })
    .catch((error) => {
      console.error(error);  // prints the error if the request fails
    });
  </script>
  

  <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
</body>
</html>
